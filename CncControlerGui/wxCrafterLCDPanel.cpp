//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: wxCrafterLCDPanel.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#include "wxCrafterLCDPanel.h"


// Declare the bitmap loading function
extern void wxCDC1CInitBitmapResources();

static bool bBitmapLoaded = false;


CncLCDPositionPanelBase::CncLCDPositionPanelBase(wxWindow* parent, wxWindowID id, const wxPoint& pos, const wxSize& size, long style)
    : wxPanel(parent, id, pos, size, style)
{
    if ( !bBitmapLoaded ) {
        // We need to initialise the default bitmap handler
        wxXmlResource::Get()->AddHandler(new wxBitmapXmlHandler);
        wxCDC1CInitBitmapResources();
        bBitmapLoaded = true;
    }
    
    wxFlexGridSizer* flexGridSizer45 = new wxFlexGridSizer(2, 1, 0, 0);
    flexGridSizer45->SetFlexibleDirection( wxBOTH );
    flexGridSizer45->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    flexGridSizer45->AddGrowableCol(0);
    flexGridSizer45->AddGrowableRow(1);
    this->SetSizer(flexGridSizer45);
    
    wxFlexGridSizer* flexGridSizer47 = new wxFlexGridSizer(3, 1, 0, 0);
    flexGridSizer47->SetFlexibleDirection( wxBOTH );
    flexGridSizer47->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    flexGridSizer47->AddGrowableCol(0);
    flexGridSizer47->AddGrowableRow(0);
    flexGridSizer47->AddGrowableRow(1);
    flexGridSizer47->AddGrowableRow(2);
    
    flexGridSizer45->Add(flexGridSizer47, 1, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    m_staticLine5110 = new wxStaticLine(this, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), wxLI_HORIZONTAL);
    
    flexGridSizer47->Add(m_staticLine5110, 0, wxALL|wxEXPAND, WXC_FROM_DIP(0));
    
    m_staticText49 = new wxStaticText(this, wxID_ANY, _("Cnc Monitor:"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), 0);
    m_staticText49->SetForegroundColour(wxColour(wxT("rgb(0,64,128)")));
    wxFont m_staticText49Font(12, wxFONTFAMILY_SWISS, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_BOLD, false, wxT("Segoe UI"));
    m_staticText49->SetFont(m_staticText49Font);
    
    flexGridSizer47->Add(m_staticText49, 0, wxALL|wxEXPAND, WXC_FROM_DIP(0));
    
    m_staticLine51 = new wxStaticLine(this, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), wxLI_HORIZONTAL);
    
    flexGridSizer47->Add(m_staticLine51, 0, wxALL|wxEXPAND, WXC_FROM_DIP(0));
    
    wxFlexGridSizer* flexGridSizer3 = new wxFlexGridSizer(4, 1, 0, 0);
    flexGridSizer3->SetFlexibleDirection( wxBOTH );
    flexGridSizer3->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    flexGridSizer3->AddGrowableCol(0);
    flexGridSizer3->AddGrowableRow(0);
    flexGridSizer3->AddGrowableRow(1);
    flexGridSizer3->AddGrowableRow(2);
    flexGridSizer3->AddGrowableRow(3);
    
    flexGridSizer45->Add(flexGridSizer3, 1, wxALL|wxEXPAND, WXC_FROM_DIP(1));
    
    wxFlexGridSizer* flexGridSizer5 = new wxFlexGridSizer(0, 3, 0, 0);
    flexGridSizer5->SetFlexibleDirection( wxBOTH );
    flexGridSizer5->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    flexGridSizer5->AddGrowableCol(1);
    flexGridSizer5->AddGrowableRow(0);
    
    flexGridSizer3->Add(flexGridSizer5, 1, wxALL|wxEXPAND, WXC_FROM_DIP(0));
    
    m_staticText7 = new wxStaticText(this, wxID_ANY, _("F:"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(30,-1)), wxALIGN_RIGHT);
    wxFont m_staticText7Font(26, wxFONTFAMILY_SWISS, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL, false, wxT("Segoe UI"));
    m_staticText7->SetFont(m_staticText7Font);
    
    flexGridSizer5->Add(m_staticText7, 0, wxALL, WXC_FROM_DIP(2));
    m_staticText7->SetMinSize(wxSize(30,-1));
    
    m_lcdPlaceholderW = new wxPanel(this, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), wxTAB_TRAVERSAL);
    m_lcdPlaceholderW->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_ACTIVECAPTION));
    
    flexGridSizer5->Add(m_lcdPlaceholderW, 0, wxALL|wxEXPAND, WXC_FROM_DIP(2));
    
    wxFlexGridSizer* flexGridSizer27 = new wxFlexGridSizer(2, 1, 0, 0);
    flexGridSizer27->SetFlexibleDirection( wxBOTH );
    flexGridSizer27->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    
    flexGridSizer5->Add(flexGridSizer27, 0, wxALL, WXC_FROM_DIP(0));
    
    flexGridSizer27->Add(0, 12, 1, wxALL, WXC_FROM_DIP(0));
    
    m_unitW = new wxStaticText(this, wxID_ANY, _("[mm/\nmin]"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(38,-1)), wxALIGN_RIGHT);
    wxFont m_unitWFont(9, wxFONTFAMILY_SWISS, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_BOLD, false, wxT("Segoe UI"));
    m_unitW->SetFont(m_unitWFont);
    
    flexGridSizer27->Add(m_unitW, 0, wxALL, WXC_FROM_DIP(0));
    m_unitW->SetMinSize(wxSize(38,-1));
    
    wxFlexGridSizer* flexGridSizer51 = new wxFlexGridSizer(0, 3, 0, 0);
    flexGridSizer51->SetFlexibleDirection( wxBOTH );
    flexGridSizer51->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    flexGridSizer51->AddGrowableCol(1);
    flexGridSizer51->AddGrowableRow(0);
    
    flexGridSizer3->Add(flexGridSizer51, 1, wxALL|wxEXPAND, WXC_FROM_DIP(0));
    
    m_staticText72 = new wxStaticText(this, wxID_ANY, _("X:"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(30,-1)), wxALIGN_RIGHT);
    m_staticText72->SetForegroundColour(wxColour(wxT("rgb(255,128,128)")));
    wxFont m_staticText72Font(26, wxFONTFAMILY_SWISS, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL, false, wxT("Segoe UI"));
    m_staticText72->SetFont(m_staticText72Font);
    
    flexGridSizer51->Add(m_staticText72, 0, wxALL, WXC_FROM_DIP(2));
    m_staticText72->SetMinSize(wxSize(30,-1));
    
    m_lcdPlaceholderX = new wxPanel(this, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), wxTAB_TRAVERSAL);
    m_lcdPlaceholderX->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_ACTIVECAPTION));
    
    flexGridSizer51->Add(m_lcdPlaceholderX, 0, wxALL|wxEXPAND, WXC_FROM_DIP(2));
    
    wxFlexGridSizer* flexGridSizer38 = new wxFlexGridSizer(2, 1, 0, 0);
    flexGridSizer38->SetFlexibleDirection( wxBOTH );
    flexGridSizer38->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    
    flexGridSizer51->Add(flexGridSizer38, 0, wxALL, WXC_FROM_DIP(0));
    
    flexGridSizer38->Add(0, 20, 1, wxALL, WXC_FROM_DIP(0));
    
    m_unitX = new wxStaticText(this, wxID_ANY, _("[steps]"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(38,-1)), wxALIGN_RIGHT);
    wxFont m_unitXFont(9, wxFONTFAMILY_SWISS, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_BOLD, false, wxT("Segoe UI"));
    m_unitX->SetFont(m_unitXFont);
    
    flexGridSizer38->Add(m_unitX, 0, wxALL, WXC_FROM_DIP(0));
    m_unitX->SetMinSize(wxSize(38,-1));
    
    wxFlexGridSizer* flexGridSizer514 = new wxFlexGridSizer(0, 3, 0, 0);
    flexGridSizer514->SetFlexibleDirection( wxBOTH );
    flexGridSizer514->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    flexGridSizer514->AddGrowableCol(1);
    flexGridSizer514->AddGrowableRow(0);
    
    flexGridSizer3->Add(flexGridSizer514, 1, wxALL|wxEXPAND, WXC_FROM_DIP(0));
    
    m_staticText725 = new wxStaticText(this, wxID_ANY, _("Y:"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(30,-1)), wxALIGN_RIGHT);
    m_staticText725->SetForegroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_HIGHLIGHT));
    wxFont m_staticText725Font(26, wxFONTFAMILY_SWISS, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL, false, wxT("Segoe UI"));
    m_staticText725->SetFont(m_staticText725Font);
    
    flexGridSizer514->Add(m_staticText725, 0, wxALL, WXC_FROM_DIP(2));
    m_staticText725->SetMinSize(wxSize(30,-1));
    
    m_lcdPlaceholderY = new wxPanel(this, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), wxTAB_TRAVERSAL);
    m_lcdPlaceholderY->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_ACTIVECAPTION));
    
    flexGridSizer514->Add(m_lcdPlaceholderY, 0, wxALL|wxEXPAND, WXC_FROM_DIP(2));
    
    wxFlexGridSizer* flexGridSizer35 = new wxFlexGridSizer(2, 1, 0, 0);
    flexGridSizer35->SetFlexibleDirection( wxBOTH );
    flexGridSizer35->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    
    flexGridSizer514->Add(flexGridSizer35, 0, wxALL, WXC_FROM_DIP(0));
    
    flexGridSizer35->Add(0, 20, 1, wxALL, WXC_FROM_DIP(0));
    
    m_unitY = new wxStaticText(this, wxID_ANY, _("[mm]"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(38,-1)), wxALIGN_RIGHT);
    wxFont m_unitYFont(9, wxFONTFAMILY_SWISS, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_BOLD, false, wxT("Segoe UI"));
    m_unitY->SetFont(m_unitYFont);
    
    flexGridSizer35->Add(m_unitY, 0, wxALL, WXC_FROM_DIP(0));
    m_unitY->SetMinSize(wxSize(38,-1));
    
    wxFlexGridSizer* flexGridSizer5147 = new wxFlexGridSizer(0, 3, 0, 0);
    flexGridSizer5147->SetFlexibleDirection( wxBOTH );
    flexGridSizer5147->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    flexGridSizer5147->AddGrowableCol(1);
    flexGridSizer5147->AddGrowableRow(0);
    
    flexGridSizer3->Add(flexGridSizer5147, 1, wxALL|wxEXPAND, WXC_FROM_DIP(0));
    
    m_staticText7258 = new wxStaticText(this, wxID_ANY, _("Z:"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(30,-1)), wxALIGN_RIGHT);
    m_staticText7258->SetForegroundColour(wxColour(wxT("rgb(0,128,64)")));
    wxFont m_staticText7258Font(26, wxFONTFAMILY_SWISS, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL, false, wxT("Segoe UI"));
    m_staticText7258->SetFont(m_staticText7258Font);
    
    flexGridSizer5147->Add(m_staticText7258, 0, wxALL, WXC_FROM_DIP(2));
    m_staticText7258->SetMinSize(wxSize(30,-1));
    
    m_lcdPlaceholderZ = new wxPanel(this, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), wxTAB_TRAVERSAL);
    m_lcdPlaceholderZ->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_ACTIVECAPTION));
    
    flexGridSizer5147->Add(m_lcdPlaceholderZ, 0, wxALL|wxEXPAND, WXC_FROM_DIP(2));
    
    wxFlexGridSizer* flexGridSizer32 = new wxFlexGridSizer(2, 1, 0, 0);
    flexGridSizer32->SetFlexibleDirection( wxBOTH );
    flexGridSizer32->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    
    flexGridSizer5147->Add(flexGridSizer32, 0, wxALL, WXC_FROM_DIP(0));
    
    flexGridSizer32->Add(0, 20, 1, wxALL, WXC_FROM_DIP(0));
    
    m_unitZ = new wxStaticText(this, wxID_ANY, _("[mm]"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(38,-1)), wxALIGN_RIGHT);
    wxFont m_unitZFont(9, wxFONTFAMILY_SWISS, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_BOLD, false, wxT("Segoe UI"));
    m_unitZ->SetFont(m_unitZFont);
    
    flexGridSizer32->Add(m_unitZ, 0, wxALL, WXC_FROM_DIP(0));
    m_unitZ->SetMinSize(wxSize(38,-1));
    
    m_updateTimer = new wxTimer;
    m_updateTimer->Start(300, false);
    
    m_startupTimer = new wxTimer;
    m_startupTimer->Start(300, true);
    
    SetName(wxT("CncLCDPositionPanelBase"));
    SetSize(500,260);
    if (GetSizer()) {
         GetSizer()->Fit(this);
    }
    // Connect events
    this->Connect(wxEVT_PAINT, wxPaintEventHandler(CncLCDPositionPanelBase::onPaint), NULL, this);
    this->Connect(wxEVT_SIZE, wxSizeEventHandler(CncLCDPositionPanelBase::onSize), NULL, this);
    m_updateTimer->Connect(wxEVT_TIMER, wxTimerEventHandler(CncLCDPositionPanelBase::onUpdateTimer), NULL, this);
    m_startupTimer->Connect(wxEVT_TIMER, wxTimerEventHandler(CncLCDPositionPanelBase::onStartupTimer), NULL, this);
    
}

CncLCDPositionPanelBase::~CncLCDPositionPanelBase()
{
    this->Disconnect(wxEVT_PAINT, wxPaintEventHandler(CncLCDPositionPanelBase::onPaint), NULL, this);
    this->Disconnect(wxEVT_SIZE, wxSizeEventHandler(CncLCDPositionPanelBase::onSize), NULL, this);
    m_updateTimer->Disconnect(wxEVT_TIMER, wxTimerEventHandler(CncLCDPositionPanelBase::onUpdateTimer), NULL, this);
    m_startupTimer->Disconnect(wxEVT_TIMER, wxTimerEventHandler(CncLCDPositionPanelBase::onStartupTimer), NULL, this);
    
    m_updateTimer->Stop();
    wxDELETE( m_updateTimer );

    m_startupTimer->Stop();
    wxDELETE( m_startupTimer );

}
