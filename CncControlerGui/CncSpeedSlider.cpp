#include <wx/gdicmn.h>
#include <wx/richtooltip.h>
#include "CncNumberFormatter.h"
#include "CncConfig.h"
#include "MainFrameProxy.h"
#include "CncSpeedSlider.h"

///////////////////////////////////////////////////////////////////
CncSpeedSliderInterface::CncSpeedSliderInterface(wxSlider* s, wxTextCtrl* l, wxStaticText* u) 
: slider				(s)
, sliderValue			(l)
, sliderUnit			(u)
, toolTipWindow			(NULL)
, bShowvalue			(true)
///////////////////////////////////////////////////////////////////
{
	wxASSERT(slider			!= NULL);
	wxASSERT(sliderValue	!= NULL);
}
///////////////////////////////////////////////////////////////////
CncSpeedSliderInterface::~CncSpeedSliderInterface() {
///////////////////////////////////////////////////////////////////
	
}
///////////////////////////////////////////////////////////////////
void CncSpeedSliderInterface::enable(bool state) {
///////////////////////////////////////////////////////////////////
	slider->Enable(state);
	sliderValue->Enable(state);
}
///////////////////////////////////////////////////////////////////
void CncSpeedSliderInterface::showUnit(bool state) {
///////////////////////////////////////////////////////////////////
	if ( sliderUnit != NULL ) {
		sliderUnit->SetLabel( state ? "[mm/min]" : "");
		updateControls();
	}
}
///////////////////////////////////////////////////////////////////
void CncSpeedSliderInterface::showValue(bool state) {
///////////////////////////////////////////////////////////////////
	bShowvalue = state;
	updateControls();
}
///////////////////////////////////////////////////////////////////
void CncSpeedSliderInterface::updateToolTip() {
///////////////////////////////////////////////////////////////////
	if ( toolTipWindow == NULL )
		return;
		
	const float pitch = 12.0;
	
	wxString tt("");
	
	tt.append(wxString::Format("%s [mm/min]\n",	CncNumberFormatter::toString((double)(slider->GetValue())),				1));
	tt.append(wxString::Format("%s [mm/sec]\n",	CncNumberFormatter::toString((double)(slider->GetValue()) / 60.0),		1));
	tt.append(wxString::Format("%s [rpm]\n",	CncNumberFormatter::toString((double)(slider->GetValue()) / pitch),		1));
	tt.append(wxString::Format("%s [rps]\n",	CncNumberFormatter::toString((double)(slider->GetValue()) / pitch / 60),	1));
	
	wxRichToolTip tip("Configured Speed:", tt);
	tip.SetIcon(wxICON_INFORMATION);
	tip.SetTimeout(3000);
	tip.ShowFor(toolTipWindow);
}
///////////////////////////////////////////////////////////////////
void CncSpeedSliderInterface::setRange(int min, int max) {
///////////////////////////////////////////////////////////////////
	if ( min < 0 )
		min = 0;
		
	if ( max < min )
		max = min;
	
	slider->SetRange(min, max);
	updateControls();
}
///////////////////////////////////////////////////////////////////
void CncSpeedSliderInterface::previewValue(int value) {
///////////////////////////////////////////////////////////////////
	slider->SetValue(value);
}
///////////////////////////////////////////////////////////////////
void CncSpeedSliderInterface::previewValue(float value) {
///////////////////////////////////////////////////////////////////
	previewValue((int)value);
}
///////////////////////////////////////////////////////////////////
void CncSpeedSliderInterface::previewValue(double value) {
///////////////////////////////////////////////////////////////////
	previewValue((int)value);
}
///////////////////////////////////////////////////////////////////
void CncSpeedSliderInterface::setValue(int value) {
///////////////////////////////////////////////////////////////////
	previewValue(value);
	APP_PROXY::updateCncSpeed((float)(slider->GetValue()), CncSpeedUserDefined);
}
///////////////////////////////////////////////////////////////////
void CncSpeedSliderInterface::setValue(float value) {
///////////////////////////////////////////////////////////////////
	setValue((int)value);
}
///////////////////////////////////////////////////////////////////
void CncSpeedSliderInterface::setValue(double value) {
///////////////////////////////////////////////////////////////////
	setValue((int)value);
}
///////////////////////////////////////////////////////////////////
void CncSpeedSliderInterface::autoConfigure() {
///////////////////////////////////////////////////////////////////
	setRange(0, (int) THE_CONFIG->getMaxSpeedXYZ_MM_MIN());
	setValue((float)(slider->GetMax() * 0.2));
	updateControls();
}
///////////////////////////////////////////////////////////////////
int CncSpeedSliderInterface::getValueMM_MIN() {
///////////////////////////////////////////////////////////////////
	return slider->GetValue();
}
///////////////////////////////////////////////////////////////////
int CncSpeedSliderInterface::getValueMM_SEC() {
///////////////////////////////////////////////////////////////////
	return round(((float)getValueMM_MIN()) / 60.0);
}



///////////////////////////////////////////////////////////////////
CncDefaultSpeedSlider::CncDefaultSpeedSlider(wxSlider* slider, wxTextCtrl* label, wxStaticText* unit)
: wxEvtHandler 				()
, CncSpeedSliderInterface	(slider, label, unit)
///////////////////////////////////////////////////////////////////
{
	setRange(0, 10000);
	setValue((float)(slider->GetMax() * 0.2));
	
	showUnit (unit != NULL);
	showValue(true);

	slider->Bind(wxEVT_SCROLL_CHANGED,			&CncDefaultSpeedSlider::onChangedSlider, 		this);
	slider->Bind(wxEVT_SCROLL_THUMBTRACK,		&CncDefaultSpeedSlider::onThumbtrackSlider, 	this);
	slider->Bind(wxEVT_SCROLL_THUMBRELEASE,		&CncDefaultSpeedSlider::onThumbreleasekSlider, 	this);
}
///////////////////////////////////////////////////////////////////
CncDefaultSpeedSlider::~CncDefaultSpeedSlider() {
///////////////////////////////////////////////////////////////////
	slider->Unbind(wxEVT_SCROLL_CHANGED,		&CncDefaultSpeedSlider::onChangedSlider, 		this);
	slider->Unbind(wxEVT_SCROLL_THUMBTRACK,		&CncDefaultSpeedSlider::onThumbtrackSlider, 	this);
	slider->Unbind(wxEVT_SCROLL_THUMBRELEASE,	&CncDefaultSpeedSlider::onThumbreleasekSlider, 	this);
}
///////////////////////////////////////////////////////////////////
void CncDefaultSpeedSlider::updateControls() {
///////////////////////////////////////////////////////////////////
	sliderValue->ChangeValue(CncNumberFormatter::toString(getValueMM_MIN()));
}
///////////////////////////////////////////////////////////////////
void CncDefaultSpeedSlider::onChangedSlider(wxScrollEvent& event) {
///////////////////////////////////////////////////////////////////
	updateControls();
	updateToolTip();
}
///////////////////////////////////////////////////////////////////
void CncDefaultSpeedSlider::onThumbtrackSlider(wxScrollEvent& event) {
///////////////////////////////////////////////////////////////////
	updateControls();
}
///////////////////////////////////////////////////////////////////
void CncDefaultSpeedSlider::onThumbreleasekSlider(wxScrollEvent& event) {
///////////////////////////////////////////////////////////////////
	updateControls();
}
