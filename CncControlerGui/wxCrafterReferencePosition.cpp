//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: wxCrafterReferencePosition.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#include "wxCrafterReferencePosition.h"


// Declare the bitmap loading function
extern void wxC127EInitBitmapResources();

static bool bBitmapLoaded = false;


CncReferencePositionBase::CncReferencePositionBase(wxWindow* parent, wxWindowID id, const wxString& title, const wxPoint& pos, const wxSize& size, long style)
    : wxDialog(parent, id, title, pos, size, style)
{
    if ( !bBitmapLoaded ) {
        // We need to initialise the default bitmap handler
        wxXmlResource::Get()->AddHandler(new wxBitmapXmlHandler);
        wxC127EInitBitmapResources();
        bBitmapLoaded = true;
    }
    // Set icon(s) to the application/dialog
    wxIconBundle app_icons;
    {
        wxBitmap iconBmp = wxXmlResource::Get()->LoadBitmap(wxT("snap-orto"));
        wxIcon icn;
        icn.CopyFromBitmap(iconBmp);
        app_icons.AddIcon( icn );
    }
    SetIcons( app_icons );

    
    wxFlexGridSizer* flexGridSizer7428 = new wxFlexGridSizer(3, 1, 0, 0);
    flexGridSizer7428->SetFlexibleDirection( wxBOTH );
    flexGridSizer7428->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    this->SetSizer(flexGridSizer7428);
    
    wxFlexGridSizer* flexGridSizer5324 = new wxFlexGridSizer(11, 1, 0, 0);
    flexGridSizer5324->SetFlexibleDirection( wxBOTH );
    flexGridSizer5324->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    flexGridSizer5324->AddGrowableCol(0);
    flexGridSizer5324->AddGrowableRow(1);
    
    flexGridSizer7428->Add(flexGridSizer5324, 1, wxALL|wxEXPAND, WXC_FROM_DIP(0));
    
    wxFlexGridSizer* flexGridSizer5503 = new wxFlexGridSizer(1, 2, 0, 0);
    flexGridSizer5503->SetFlexibleDirection( wxBOTH );
    flexGridSizer5503->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    flexGridSizer5503->AddGrowableCol(1);
    flexGridSizer5503->AddGrowableRow(0);
    
    flexGridSizer5324->Add(flexGridSizer5503, 1, wxALL|wxEXPAND, WXC_FROM_DIP(2));
    
    wxFlexGridSizer* flexGridSizer6839 = new wxFlexGridSizer(2, 1, 0, 0);
    flexGridSizer6839->SetFlexibleDirection( wxBOTH );
    flexGridSizer6839->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    
    flexGridSizer5503->Add(flexGridSizer6839, 0, wxALL, WXC_FROM_DIP(5));
    
    m_staticText5505 = new wxStaticText(this, wxID_ANY, _(" Navigation Panel:"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), 0);
    wxFont m_staticText5505Font(9, wxFONTFAMILY_SWISS, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_BOLD, false, wxT("Segoe UI"));
    m_staticText5505->SetFont(m_staticText5505Font);
    
    flexGridSizer6839->Add(m_staticText5505, 0, wxALL, WXC_FROM_DIP(5));
    
    wxFlexGridSizer* flexGridSizer5314 = new wxFlexGridSizer(1, 2, 0, 0);
    flexGridSizer5314->SetFlexibleDirection( wxBOTH );
    flexGridSizer5314->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    flexGridSizer5314->AddGrowableCol(1);
    flexGridSizer5314->AddGrowableRow(0);
    
    flexGridSizer6839->Add(flexGridSizer5314, 1, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    wxFlexGridSizer* flexGridSizer5336 = new wxFlexGridSizer(4, 1, 0, 0);
    flexGridSizer5336->SetFlexibleDirection( wxBOTH );
    flexGridSizer5336->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    
    flexGridSizer5314->Add(flexGridSizer5336, 0, wxALL, WXC_FROM_DIP(5));
    
    m_staticLine5357 = new wxStaticLine(this, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), wxLI_HORIZONTAL);
    
    flexGridSizer5336->Add(m_staticLine5357, 0, wxALL|wxEXPAND, WXC_FROM_DIP(0));
    
    m_staticText5355 = new wxStaticText(this, wxID_ANY, _("Step Sensitivity:"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), 0);
    m_staticText5355->SetForegroundColour(wxColour(wxT("rgb(0,0,128)")));
    wxFont m_staticText5355Font(8, wxFONTFAMILY_SWISS, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_BOLD, false, wxT("Segoe UI"));
    m_staticText5355->SetFont(m_staticText5355Font);
    
    flexGridSizer5336->Add(m_staticText5355, 0, wxALL, WXC_FROM_DIP(5));
    
    wxFlexGridSizer* flexGridSizer5353 = new wxFlexGridSizer(0, 3, 0, 0);
    flexGridSizer5353->SetFlexibleDirection( wxBOTH );
    flexGridSizer5353->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    
    flexGridSizer5336->Add(flexGridSizer5353, 0, wxALL, WXC_FROM_DIP(2));
    
    m_staticBitmap5844 = new wxStaticBitmap(this, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("playstation-cross-dark-icon24")), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), 0 );
    
    flexGridSizer5353->Add(m_staticBitmap5844, 0, wxALL, WXC_FROM_DIP(2));
    
    wxArrayString m_rbStepSensitivityArr;
    m_rbStepSensitivityArr.Add(_("Finest:"));
    m_rbStepSensitivityArr.Add(_("Fine:"));
    m_rbStepSensitivityArr.Add(_("Medium:"));
    m_rbStepSensitivityArr.Add(_("Rough:"));
    m_rbStepSensitivityArr.Add(_("Roughest:"));
    m_rbStepSensitivity = new wxRadioBox(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), m_rbStepSensitivityArr, 1, wxRA_SPECIFY_COLS);
    wxFont m_rbStepSensitivityFont(8, wxFONTFAMILY_SWISS, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_BOLD, false, wxT("Segoe UI"));
    m_rbStepSensitivity->SetFont(m_rbStepSensitivityFont);
    m_rbStepSensitivity->SetSelection(1);
    
    flexGridSizer5353->Add(m_rbStepSensitivity, 0, wxALL|wxEXPAND, WXC_FROM_DIP(1));
    
    flexGridSizer5353->Add(10, 0, 1, wxALL, WXC_FROM_DIP(0));
    
    flexGridSizer5336->Add(0, 46, 1, wxALL, WXC_FROM_DIP(2));
    
    wxFlexGridSizer* flexGridSizer6836 = new wxFlexGridSizer(1, 1, 0, 0);
    flexGridSizer6836->SetFlexibleDirection( wxBOTH );
    flexGridSizer6836->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    flexGridSizer6836->AddGrowableCol(0);
    flexGridSizer6836->AddGrowableRow(0);
    
    flexGridSizer5503->Add(flexGridSizer6836, 1, wxALL|wxEXPAND, WXC_FROM_DIP(0));
    
    m_navigationPanelPlaceholder = new wxPanel(this, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), wxTAB_TRAVERSAL);
    m_navigationPanelPlaceholder->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_ACTIVECAPTION));
    
    flexGridSizer6836->Add(m_navigationPanelPlaceholder, 0, wxALL|wxEXPAND, WXC_FROM_DIP(0));
    
    m_staticLine535015 = new wxStaticLine(this, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), wxLI_HORIZONTAL);
    
    flexGridSizer5324->Add(m_staticLine535015, 0, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    wxFlexGridSizer* flexGridSizer5845 = new wxFlexGridSizer(1, 2, 0, 0);
    flexGridSizer5845->SetFlexibleDirection( wxBOTH );
    flexGridSizer5845->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    flexGridSizer5845->AddGrowableCol(1);
    flexGridSizer5845->AddGrowableRow(0);
    
    flexGridSizer5324->Add(flexGridSizer5845, 0, wxALL, WXC_FROM_DIP(0));
    
    wxFlexGridSizer* flexGridSizer7412 = new wxFlexGridSizer(0, 3, 0, 0);
    flexGridSizer7412->SetFlexibleDirection( wxBOTH );
    flexGridSizer7412->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    
    flexGridSizer5845->Add(flexGridSizer7412, 1, wxALL, WXC_FROM_DIP(0));
    
    flexGridSizer7412->Add(14, 0, 1, wxALL, WXC_FROM_DIP(0));
    
    m_staticBitmap5847 = new wxStaticBitmap(this, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("playstation-circle-dark-icon24")), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), 0 );
    
    flexGridSizer7412->Add(m_staticBitmap5847, 0, wxALL, WXC_FROM_DIP(1));
    
    m_staticText5340 = new wxStaticText(this, wxID_ANY, _("Reference Position Mode:"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), 0);
    wxFont m_staticText5340Font(9, wxFONTFAMILY_SWISS, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_BOLD, false, wxT("Segoe UI"));
    m_staticText5340->SetFont(m_staticText5340Font);
    
    flexGridSizer7412->Add(m_staticText5340, 0, wxALL, WXC_FROM_DIP(5));
    
    wxFlexGridSizer* flexGridSizer5447 = new wxFlexGridSizer(1, 3, 0, 0);
    flexGridSizer5447->SetFlexibleDirection( wxBOTH );
    flexGridSizer5447->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    flexGridSizer5447->AddGrowableCol(1);
    flexGridSizer5447->AddGrowableRow(0);
    
    flexGridSizer5845->Add(flexGridSizer5447, 0, wxALL, WXC_FROM_DIP(0));
    
    flexGridSizer5447->Add(1, 0, 1, wxALL, WXC_FROM_DIP(0));
    
    m_modeSelected = new wxStaticText(this, wxID_ANY, _("0"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), 0);
    m_modeSelected->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_INACTIVECAPTION));
    m_modeSelected->SetForegroundColour(wxColour(wxT("rgb(0,0,128)")));
    wxFont m_modeSelectedFont(9, wxFONTFAMILY_SWISS, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_BOLD, false, wxT("Segoe UI"));
    m_modeSelected->SetFont(m_modeSelectedFont);
    
    flexGridSizer5447->Add(m_modeSelected, 0, wxALL, WXC_FROM_DIP(6));
    
    m_modeText = new wxStaticText(this, wxID_ANY, _("1\n2\n3"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), 0);
    wxFont m_modeTextFont(7, wxFONTFAMILY_SWISS, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL, false, wxT("Segoe UI"));
    m_modeText->SetFont(m_modeTextFont);
    
    flexGridSizer5447->Add(m_modeText, 0, wxALL, WXC_FROM_DIP(4));
    
    wxFlexGridSizer* flexGridSizer5326 = new wxFlexGridSizer(1, 6, 0, 0);
    flexGridSizer5326->SetFlexibleDirection( wxBOTH );
    flexGridSizer5326->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    
    flexGridSizer5324->Add(flexGridSizer5326, 1, wxALL|wxEXPAND|wxALIGN_CENTER_HORIZONTAL, WXC_FROM_DIP(5));
    
    wxFlexGridSizer* flexGridSizer5456 = new wxFlexGridSizer(2, 1, 0, 0);
    flexGridSizer5456->SetFlexibleDirection( wxBOTH );
    flexGridSizer5456->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    
    flexGridSizer5326->Add(flexGridSizer5456, 0, wxALL, WXC_FROM_DIP(0));
    
    m_staticText5460 = new wxStaticText(this, wxID_ANY, _("1"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), wxALIGN_CENTRE);
    wxFont m_staticText5460Font(9, wxFONTFAMILY_SWISS, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_BOLD, false, wxT("Segoe UI"));
    m_staticText5460->SetFont(m_staticText5460Font);
    
    flexGridSizer5456->Add(m_staticText5460, 0, wxALL|wxALIGN_CENTER, WXC_FROM_DIP(0));
    
    m_btMode1 = new wxBitmapToggleButton(this, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("mode1")), wxDefaultPosition, wxDLG_UNIT(this, wxSize(64,64)), 0);
    m_btMode1->SetToolTip(_("Mode 1"));
    m_btMode1->SetValue(false);
    
    flexGridSizer5456->Add(m_btMode1, 0, wxALL, WXC_FROM_DIP(5));
    m_btMode1->SetMinSize(wxSize(64,64));
    
    wxFlexGridSizer* flexGridSizer5461 = new wxFlexGridSizer(2, 1, 0, 0);
    flexGridSizer5461->SetFlexibleDirection( wxBOTH );
    flexGridSizer5461->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    
    flexGridSizer5326->Add(flexGridSizer5461, 0, wxALL, WXC_FROM_DIP(0));
    
    m_staticText5467 = new wxStaticText(this, wxID_ANY, _("2"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), 0);
    wxFont m_staticText5467Font(9, wxFONTFAMILY_SWISS, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_BOLD, false, wxT("Segoe UI"));
    m_staticText5467->SetFont(m_staticText5467Font);
    
    flexGridSizer5461->Add(m_staticText5467, 0, wxALL|wxALIGN_CENTER, WXC_FROM_DIP(0));
    
    m_btMode2 = new wxBitmapToggleButton(this, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("mode2")), wxDefaultPosition, wxDLG_UNIT(this, wxSize(64,64)), wxBU_BOTTOM);
    m_btMode2->SetToolTip(_("Mode 2"));
    m_btMode2->SetValue(false);
    
    flexGridSizer5461->Add(m_btMode2, 0, wxALL, WXC_FROM_DIP(5));
    m_btMode2->SetMinSize(wxSize(64,64));
    
    wxFlexGridSizer* flexGridSizer5462 = new wxFlexGridSizer(2, 1, 0, 0);
    flexGridSizer5462->SetFlexibleDirection( wxBOTH );
    flexGridSizer5462->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    
    flexGridSizer5326->Add(flexGridSizer5462, 0, wxALL|wxALIGN_CENTER, WXC_FROM_DIP(0));
    
    m_staticText5469 = new wxStaticText(this, wxID_ANY, _("3"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), 0);
    wxFont m_staticText5469Font(9, wxFONTFAMILY_SWISS, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_BOLD, false, wxT("Segoe UI"));
    m_staticText5469->SetFont(m_staticText5469Font);
    
    flexGridSizer5462->Add(m_staticText5469, 0, wxALL|wxALIGN_CENTER, WXC_FROM_DIP(0));
    
    m_btMode3 = new wxBitmapToggleButton(this, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("mode3")), wxDefaultPosition, wxDLG_UNIT(this, wxSize(64,64)), 0);
    m_btMode3->SetToolTip(_("Mode 3"));
    m_btMode3->SetValue(false);
    
    flexGridSizer5462->Add(m_btMode3, 0, wxALL|wxALIGN_CENTER, WXC_FROM_DIP(5));
    m_btMode3->SetMinSize(wxSize(64,64));
    
    wxFlexGridSizer* flexGridSizer5463 = new wxFlexGridSizer(2, 1, 0, 0);
    flexGridSizer5463->SetFlexibleDirection( wxBOTH );
    flexGridSizer5463->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    
    flexGridSizer5326->Add(flexGridSizer5463, 0, wxALL, WXC_FROM_DIP(0));
    
    m_staticText5471 = new wxStaticText(this, wxID_ANY, _("4"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), 0);
    wxFont m_staticText5471Font(9, wxFONTFAMILY_SWISS, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_BOLD, false, wxT("Segoe UI"));
    m_staticText5471->SetFont(m_staticText5471Font);
    
    flexGridSizer5463->Add(m_staticText5471, 0, wxALL|wxALIGN_CENTER, WXC_FROM_DIP(0));
    
    m_btMode4 = new wxBitmapToggleButton(this, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("mode4")), wxDefaultPosition, wxDLG_UNIT(this, wxSize(64,64)), 0);
    m_btMode4->SetToolTip(_("Mode 4"));
    m_btMode4->SetValue(false);
    
    flexGridSizer5463->Add(m_btMode4, 0, wxALL, WXC_FROM_DIP(5));
    m_btMode4->SetMinSize(wxSize(64,64));
    
    wxFlexGridSizer* flexGridSizer5464 = new wxFlexGridSizer(2, 1, 0, 0);
    flexGridSizer5464->SetFlexibleDirection( wxBOTH );
    flexGridSizer5464->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    
    flexGridSizer5326->Add(flexGridSizer5464, 0, wxALL, WXC_FROM_DIP(0));
    
    m_staticText5473 = new wxStaticText(this, wxID_ANY, _("5"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), 0);
    wxFont m_staticText5473Font(9, wxFONTFAMILY_SWISS, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_BOLD, false, wxT("Segoe UI"));
    m_staticText5473->SetFont(m_staticText5473Font);
    
    flexGridSizer5464->Add(m_staticText5473, 0, wxALL|wxALIGN_CENTER, WXC_FROM_DIP(0));
    
    m_btMode5 = new wxBitmapToggleButton(this, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("mode5")), wxDefaultPosition, wxDLG_UNIT(this, wxSize(64,64)), 0);
    m_btMode5->SetToolTip(_("Mode 5"));
    m_btMode5->SetValue(false);
    
    flexGridSizer5464->Add(m_btMode5, 0, wxALL, WXC_FROM_DIP(5));
    m_btMode5->SetMinSize(wxSize(64,64));
    
    wxFlexGridSizer* flexGridSizer5476 = new wxFlexGridSizer(2, 1, 0, 0);
    flexGridSizer5476->SetFlexibleDirection( wxBOTH );
    flexGridSizer5476->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    
    flexGridSizer5326->Add(flexGridSizer5476, 0, wxALL|wxALIGN_CENTER, WXC_FROM_DIP(0));
    
    m_staticText5475 = new wxStaticText(this, wxID_ANY, _("6"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), 0);
    wxFont m_staticText5475Font(9, wxFONTFAMILY_SWISS, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_BOLD, false, wxT("Segoe UI"));
    m_staticText5475->SetFont(m_staticText5475Font);
    
    flexGridSizer5476->Add(m_staticText5475, 0, wxALL|wxALIGN_CENTER, WXC_FROM_DIP(0));
    
    m_btMode6 = new wxBitmapToggleButton(this, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("mode6")), wxDefaultPosition, wxDLG_UNIT(this, wxSize(64,64)), 0);
    m_btMode6->SetToolTip(_("Mode 6"));
    m_btMode6->SetValue(false);
    
    flexGridSizer5476->Add(m_btMode6, 0, wxALL, WXC_FROM_DIP(5));
    m_btMode6->SetMinSize(wxSize(64,64));
    
    m_staticLine53501 = new wxStaticLine(this, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), wxLI_HORIZONTAL);
    
    flexGridSizer5324->Add(m_staticLine53501, 0, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    wxFlexGridSizer* flexGridSizer5484 = new wxFlexGridSizer(1, 7, 0, 0);
    flexGridSizer5484->SetFlexibleDirection( wxBOTH );
    flexGridSizer5484->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    
    flexGridSizer5324->Add(flexGridSizer5484, 1, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    m_staticText5486 = new wxStaticText(this, wxID_ANY, _("Workpiece\nThickness"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), 0);
    wxFont m_staticText5486Font(8, wxFONTFAMILY_SWISS, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL, false, wxT("Segoe UI"));
    m_staticText5486->SetFont(m_staticText5486Font);
    
    flexGridSizer5484->Add(m_staticText5486, 0, wxALL, WXC_FROM_DIP(3));
    
    m_workpiceThickness = new wxTextCtrl(this, wxID_ANY, wxT("0,00"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), wxTE_RIGHT);
    #if wxVERSION_NUMBER >= 3000
    m_workpiceThickness->SetHint(wxT(""));
    #endif
    
    flexGridSizer5484->Add(m_workpiceThickness, 0, wxALL, WXC_FROM_DIP(5));
    
    m_staticText5497 = new wxStaticText(this, wxID_ANY, _("mm"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), 0);
    wxFont m_staticText5497Font(8, wxFONTFAMILY_SWISS, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL, false, wxT("Segoe UI"));
    m_staticText5497->SetFont(m_staticText5497Font);
    
    flexGridSizer5484->Add(m_staticText5497, 0, wxALL, WXC_FROM_DIP(7));
    
    flexGridSizer5484->Add(32, 0, 1, wxALL, WXC_FROM_DIP(0));
    
    m_staticText5488 = new wxStaticText(this, wxID_ANY, _("Measure Plate\nThickness"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), 0);
    wxFont m_staticText5488Font(8, wxFONTFAMILY_SWISS, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL, false, wxT("Segoe UI"));
    m_staticText5488->SetFont(m_staticText5488Font);
    
    flexGridSizer5484->Add(m_staticText5488, 0, wxALL, WXC_FROM_DIP(3));
    
    m_measurePlateThickness = new wxTextCtrl(this, wxID_ANY, wxT("0,21"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), wxTE_RIGHT|wxTE_READONLY);
    m_measurePlateThickness->SetToolTip(_("Standard\nConfiguration Value"));
    #if wxVERSION_NUMBER >= 3000
    m_measurePlateThickness->SetHint(wxT(""));
    #endif
    
    flexGridSizer5484->Add(m_measurePlateThickness, 0, wxALL, WXC_FROM_DIP(5));
    
    m_staticText5499 = new wxStaticText(this, wxID_ANY, _("mm"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), 0);
    wxFont m_staticText5499Font(8, wxFONTFAMILY_SWISS, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL, false, wxT("Segoe UI"));
    m_staticText5499->SetFont(m_staticText5499Font);
    
    flexGridSizer5484->Add(m_staticText5499, 0, wxALL, WXC_FROM_DIP(7));
    
    m_staticLine5350 = new wxStaticLine(this, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), wxLI_HORIZONTAL);
    
    flexGridSizer5324->Add(m_staticLine5350, 0, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    wxFlexGridSizer* flexGridSizer7419 = new wxFlexGridSizer(1, 2, 0, 0);
    flexGridSizer7419->SetFlexibleDirection( wxBOTH );
    flexGridSizer7419->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    flexGridSizer7419->AddGrowableCol(1);
    flexGridSizer7419->AddGrowableRow(0);
    
    flexGridSizer7428->Add(flexGridSizer7419, 0, wxALL|wxEXPAND, WXC_FROM_DIP(0));
    
    wxFlexGridSizer* flexGridSizer7452 = new wxFlexGridSizer(1, 2, 0, 0);
    flexGridSizer7452->SetFlexibleDirection( wxBOTH );
    flexGridSizer7452->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    
    flexGridSizer7419->Add(flexGridSizer7452, 0, wxALL|wxALIGN_CENTER, WXC_FROM_DIP(1));
    
    flexGridSizer7452->Add(5, 0, 1, wxALL, WXC_FROM_DIP(0));
    
    m_infoBitmap = new wxStaticBitmap(this, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("24-info@2x")), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), 0 );
    
    flexGridSizer7452->Add(m_infoBitmap, 0, wxALL|wxALIGN_CENTER, WXC_FROM_DIP(0));
    
    wxFlexGridSizer* flexGridSizer5342 = new wxFlexGridSizer(1, 3, 0, 0);
    flexGridSizer5342->SetFlexibleDirection( wxBOTH );
    flexGridSizer5342->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    flexGridSizer5342->AddGrowableCol(2);
    flexGridSizer5342->AddGrowableRow(0);
    
    flexGridSizer7419->Add(flexGridSizer5342, 1, wxALL|wxEXPAND|wxALIGN_RIGHT, WXC_FROM_DIP(0));
    
    wxFlexGridSizer* flexGridSizer7440 = new wxFlexGridSizer(2, 3, 0, 0);
    flexGridSizer7440->SetFlexibleDirection( wxBOTH );
    flexGridSizer7440->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    
    flexGridSizer5342->Add(flexGridSizer7440, 0, wxALL|wxALIGN_TOP, WXC_FROM_DIP(2));
    
    m_staticLine74384 = new wxStaticLine(this, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), wxLI_VERTICAL);
    
    flexGridSizer7440->Add(m_staticLine74384, 0, wxALL|wxEXPAND, WXC_FROM_DIP(2));
    
    wxFlexGridSizer* flexGridSizer7449 = new wxFlexGridSizer(2, 3, 0, 0);
    flexGridSizer7449->SetFlexibleDirection( wxBOTH );
    flexGridSizer7449->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    
    flexGridSizer7440->Add(flexGridSizer7449, 0, wxALL|wxALIGN_CENTER, WXC_FROM_DIP(0));
    
    m_staticText7442 = new wxStaticText(this, wxID_ANY, _("X"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), 0);
    wxFont m_staticText7442Font(7, wxFONTFAMILY_SWISS, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_BOLD, false, wxT("Segoe UI"));
    m_staticText7442->SetFont(m_staticText7442Font);
    
    flexGridSizer7449->Add(m_staticText7442, 0, wxALL|wxALIGN_CENTER, WXC_FROM_DIP(0));
    
    m_staticText7444 = new wxStaticText(this, wxID_ANY, _("Y"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), 0);
    wxFont m_staticText7444Font(7, wxFONTFAMILY_SWISS, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_BOLD, false, wxT("Segoe UI"));
    m_staticText7444->SetFont(m_staticText7444Font);
    
    flexGridSizer7449->Add(m_staticText7444, 0, wxALL|wxALIGN_CENTER, WXC_FROM_DIP(0));
    
    m_staticText7446 = new wxStaticText(this, wxID_ANY, _("Z"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), 0);
    wxFont m_staticText7446Font(7, wxFONTFAMILY_SWISS, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_BOLD, false, wxT("Segoe UI"));
    m_staticText7446->SetFont(m_staticText7446Font);
    
    flexGridSizer7449->Add(m_staticText7446, 0, wxALL|wxALIGN_CENTER, WXC_FROM_DIP(0));
    
    m_btZeroX = new wxBitmapToggleButton(this, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("snap-orto")), wxDefaultPosition, wxDLG_UNIT(this, wxSize(24,24)), 0);
    m_btZeroX->SetToolTip(_("Determie if 'X' axis will be zeroed"));
    m_btZeroX->SetValue(true);
    
    flexGridSizer7449->Add(m_btZeroX, 0, wxALL, WXC_FROM_DIP(2));
    m_btZeroX->SetMinSize(wxSize(24,24));
    
    m_btZeroY = new wxBitmapToggleButton(this, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("snap-orto")), wxDefaultPosition, wxDLG_UNIT(this, wxSize(24,24)), 0);
    m_btZeroY->SetToolTip(_("Determie if 'Y' axis will be zeroed"));
    m_btZeroY->SetValue(true);
    
    flexGridSizer7449->Add(m_btZeroY, 0, wxALL, WXC_FROM_DIP(2));
    m_btZeroY->SetMinSize(wxSize(24,24));
    
    m_btZeroZ = new wxBitmapToggleButton(this, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("snap-orto")), wxDefaultPosition, wxDLG_UNIT(this, wxSize(24,24)), 0);
    m_btZeroZ->SetToolTip(_("Determie if 'Z' axis will be zeroed"));
    m_btZeroZ->SetValue(true);
    
    flexGridSizer7449->Add(m_btZeroZ, 0, wxALL, WXC_FROM_DIP(2));
    m_btZeroZ->SetMinSize(wxSize(24,24));
    
    m_staticLine7438 = new wxStaticLine(this, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), wxLI_VERTICAL);
    
    flexGridSizer7440->Add(m_staticLine7438, 0, wxALL|wxEXPAND, WXC_FROM_DIP(2));
    
    m_btSet = new wxButton(this, wxID_ANY, _("Set (0, 0, 0)"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), 0);
    m_btSet->SetDefault();
    #if wxVERSION_NUMBER >= 2904
    m_btSet->SetBitmap(wxXmlResource::Get()->LoadBitmap(wxT("playstation-square-dark-icon16")), wxLEFT);
    m_btSet->SetBitmapMargins(2,2);
    #endif
    wxFont m_btSetFont(9, wxFONTFAMILY_SWISS, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_BOLD, false, wxT("Segoe UI"));
    m_btSet->SetFont(m_btSetFont);
    m_btSet->SetToolTip(_("Set Reference Position\nand Reference Mode"));
    
    flexGridSizer5342->Add(m_btSet, 0, wxALL|wxALIGN_BOTTOM, WXC_FROM_DIP(7));
    
    m_btCancel = new wxButton(this, wxID_ANY, _("Cancel"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), 0);
    #if wxVERSION_NUMBER >= 2904
    m_btCancel->SetBitmap(wxXmlResource::Get()->LoadBitmap(wxT("playstation-triangle-dark-icon16")), wxLEFT);
    m_btCancel->SetBitmapMargins(2,2);
    #endif
    m_btCancel->SetToolTip(_("Abort"));
    
    flexGridSizer5342->Add(m_btCancel, 0, wxALL|wxALIGN_BOTTOM, WXC_FROM_DIP(7));
    
    m_staticLine7451 = new wxStaticLine(this, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), wxLI_HORIZONTAL);
    
    flexGridSizer7428->Add(m_staticLine7451, 0, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    m_infoTimer = new wxTimer;
    
    SetName(wxT("CncReferencePositionBase"));
    SetSize(-1,-1);
    if (GetSizer()) {
         GetSizer()->Fit(this);
    }
    if(GetParent()) {
        CentreOnParent(wxBOTH);
    } else {
        CentreOnScreen(wxBOTH);
    }
    // Connect events
    this->Connect(wxEVT_INIT_DIALOG, wxInitDialogEventHandler(CncReferencePositionBase::init), NULL, this);
    this->Connect(wxEVT_SHOW, wxShowEventHandler(CncReferencePositionBase::show), NULL, this);
    m_rbStepSensitivity->Connect(wxEVT_COMMAND_RADIOBOX_SELECTED, wxCommandEventHandler(CncReferencePositionBase::selectStepSensitivity), NULL, this);
    m_btMode1->Connect(wxEVT_COMMAND_TOGGLEBUTTON_CLICKED, wxCommandEventHandler(CncReferencePositionBase::mode1), NULL, this);
    m_btMode2->Connect(wxEVT_COMMAND_TOGGLEBUTTON_CLICKED, wxCommandEventHandler(CncReferencePositionBase::mode2), NULL, this);
    m_btMode3->Connect(wxEVT_COMMAND_TOGGLEBUTTON_CLICKED, wxCommandEventHandler(CncReferencePositionBase::mode3), NULL, this);
    m_btMode4->Connect(wxEVT_COMMAND_TOGGLEBUTTON_CLICKED, wxCommandEventHandler(CncReferencePositionBase::mode4), NULL, this);
    m_btMode5->Connect(wxEVT_COMMAND_TOGGLEBUTTON_CLICKED, wxCommandEventHandler(CncReferencePositionBase::mode5), NULL, this);
    m_btMode6->Connect(wxEVT_COMMAND_TOGGLEBUTTON_CLICKED, wxCommandEventHandler(CncReferencePositionBase::mode6), NULL, this);
    m_infoBitmap->Connect(wxEVT_LEFT_DOWN, wxMouseEventHandler(CncReferencePositionBase::selectInformation), NULL, this);
    m_btZeroX->Connect(wxEVT_COMMAND_TOGGLEBUTTON_CLICKED, wxCommandEventHandler(CncReferencePositionBase::toggleZeroX), NULL, this);
    m_btZeroY->Connect(wxEVT_COMMAND_TOGGLEBUTTON_CLICKED, wxCommandEventHandler(CncReferencePositionBase::toggleZeroY), NULL, this);
    m_btZeroZ->Connect(wxEVT_COMMAND_TOGGLEBUTTON_CLICKED, wxCommandEventHandler(CncReferencePositionBase::toggleZeroZ), NULL, this);
    m_btSet->Connect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(CncReferencePositionBase::set), NULL, this);
    m_btCancel->Connect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(CncReferencePositionBase::cancel), NULL, this);
    m_infoTimer->Connect(wxEVT_TIMER, wxTimerEventHandler(CncReferencePositionBase::onInfoTimer), NULL, this);
    
}

CncReferencePositionBase::~CncReferencePositionBase()
{
    this->Disconnect(wxEVT_INIT_DIALOG, wxInitDialogEventHandler(CncReferencePositionBase::init), NULL, this);
    this->Disconnect(wxEVT_SHOW, wxShowEventHandler(CncReferencePositionBase::show), NULL, this);
    m_rbStepSensitivity->Disconnect(wxEVT_COMMAND_RADIOBOX_SELECTED, wxCommandEventHandler(CncReferencePositionBase::selectStepSensitivity), NULL, this);
    m_btMode1->Disconnect(wxEVT_COMMAND_TOGGLEBUTTON_CLICKED, wxCommandEventHandler(CncReferencePositionBase::mode1), NULL, this);
    m_btMode2->Disconnect(wxEVT_COMMAND_TOGGLEBUTTON_CLICKED, wxCommandEventHandler(CncReferencePositionBase::mode2), NULL, this);
    m_btMode3->Disconnect(wxEVT_COMMAND_TOGGLEBUTTON_CLICKED, wxCommandEventHandler(CncReferencePositionBase::mode3), NULL, this);
    m_btMode4->Disconnect(wxEVT_COMMAND_TOGGLEBUTTON_CLICKED, wxCommandEventHandler(CncReferencePositionBase::mode4), NULL, this);
    m_btMode5->Disconnect(wxEVT_COMMAND_TOGGLEBUTTON_CLICKED, wxCommandEventHandler(CncReferencePositionBase::mode5), NULL, this);
    m_btMode6->Disconnect(wxEVT_COMMAND_TOGGLEBUTTON_CLICKED, wxCommandEventHandler(CncReferencePositionBase::mode6), NULL, this);
    m_infoBitmap->Disconnect(wxEVT_LEFT_DOWN, wxMouseEventHandler(CncReferencePositionBase::selectInformation), NULL, this);
    m_btZeroX->Disconnect(wxEVT_COMMAND_TOGGLEBUTTON_CLICKED, wxCommandEventHandler(CncReferencePositionBase::toggleZeroX), NULL, this);
    m_btZeroY->Disconnect(wxEVT_COMMAND_TOGGLEBUTTON_CLICKED, wxCommandEventHandler(CncReferencePositionBase::toggleZeroY), NULL, this);
    m_btZeroZ->Disconnect(wxEVT_COMMAND_TOGGLEBUTTON_CLICKED, wxCommandEventHandler(CncReferencePositionBase::toggleZeroZ), NULL, this);
    m_btSet->Disconnect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(CncReferencePositionBase::set), NULL, this);
    m_btCancel->Disconnect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(CncReferencePositionBase::cancel), NULL, this);
    m_infoTimer->Disconnect(wxEVT_TIMER, wxTimerEventHandler(CncReferencePositionBase::onInfoTimer), NULL, this);
    
    m_infoTimer->Stop();
    wxDELETE( m_infoTimer );

}

CncStartPositionResolverBase::CncStartPositionResolverBase(wxWindow* parent, wxWindowID id, const wxString& title, const wxPoint& pos, const wxSize& size, long style)
    : wxDialog(parent, id, title, pos, size, style)
{
    if ( !bBitmapLoaded ) {
        // We need to initialise the default bitmap handler
        wxXmlResource::Get()->AddHandler(new wxBitmapXmlHandler);
        wxC127EInitBitmapResources();
        bBitmapLoaded = true;
    }
    // Set icon(s) to the application/dialog
    wxIconBundle app_icons;
    {
        wxBitmap iconBmp = wxXmlResource::Get()->LoadBitmap(wxT("chart-line-error (2)"));
        wxIcon icn;
        icn.CopyFromBitmap(iconBmp);
        app_icons.AddIcon( icn );
    }
    SetIcons( app_icons );

    
    wxFlexGridSizer* flexGridSizer7813 = new wxFlexGridSizer(4, 1, 0, 0);
    flexGridSizer7813->SetFlexibleDirection( wxBOTH );
    flexGridSizer7813->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    flexGridSizer7813->AddGrowableCol(0);
    flexGridSizer7813->AddGrowableRow(0);
    this->SetSizer(flexGridSizer7813);
    
    wxFlexGridSizer* flexGridSizer7820 = new wxFlexGridSizer(2, 2, 0, 0);
    flexGridSizer7820->SetFlexibleDirection( wxBOTH );
    flexGridSizer7820->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    
    flexGridSizer7813->Add(flexGridSizer7820, 0, wxALL|wxEXPAND, WXC_FROM_DIP(0));
    
    m_staticBitmap7832 = new wxStaticBitmap(this, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("target-200")), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), 0 );
    
    flexGridSizer7820->Add(m_staticBitmap7832, 0, wxALL, WXC_FROM_DIP(5));
    
    wxFlexGridSizer* flexGridSizer7840 = new wxFlexGridSizer(2, 2, 0, 0);
    flexGridSizer7840->SetFlexibleDirection( wxBOTH );
    flexGridSizer7840->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    flexGridSizer7840->AddGrowableCol(0);
    flexGridSizer7840->AddGrowableRow(0);
    flexGridSizer7840->AddGrowableRow(1);
    
    flexGridSizer7820->Add(flexGridSizer7840, 0, wxALL|wxEXPAND, WXC_FROM_DIP(0));
    
    wxFlexGridSizer* flexGridSizer78421 = new wxFlexGridSizer(6, 1, 0, 0);
    flexGridSizer78421->SetFlexibleDirection( wxBOTH );
    flexGridSizer78421->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    
    flexGridSizer7840->Add(flexGridSizer78421, 1, wxALL|wxEXPAND, WXC_FROM_DIP(0));
    
    m_staticText78442 = new wxStaticText(this, wxID_ANY, _("Current Position [x, y, z]:"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), 0);
    
    flexGridSizer78421->Add(m_staticText78442, 0, wxALL, WXC_FROM_DIP(3));
    
    wxFlexGridSizer* flexGridSizer7870 = new wxFlexGridSizer(1, 4, 0, 0);
    flexGridSizer7870->SetFlexibleDirection( wxBOTH );
    flexGridSizer7870->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    
    flexGridSizer78421->Add(flexGridSizer7870, 0, wxALL|wxEXPAND|wxALIGN_RIGHT, WXC_FROM_DIP(5));
    
    m_currentPositionX = new wxTextCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDLG_UNIT(this, wxSize(90,-1)), wxTE_RIGHT|wxTE_READONLY);
    #if wxVERSION_NUMBER >= 3000
    m_currentPositionX->SetHint(wxT(""));
    #endif
    
    flexGridSizer7870->Add(m_currentPositionX, 0, wxALL|wxEXPAND|wxALIGN_RIGHT, WXC_FROM_DIP(1));
    m_currentPositionX->SetMinSize(wxSize(90,-1));
    
    m_currentPositionY = new wxTextCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDLG_UNIT(this, wxSize(90,-1)), wxTE_RIGHT|wxTE_READONLY);
    #if wxVERSION_NUMBER >= 3000
    m_currentPositionY->SetHint(wxT(""));
    #endif
    
    flexGridSizer7870->Add(m_currentPositionY, 0, wxALL|wxEXPAND|wxALIGN_RIGHT, WXC_FROM_DIP(1));
    m_currentPositionY->SetMinSize(wxSize(90,-1));
    
    m_currentPositionZ = new wxTextCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDLG_UNIT(this, wxSize(90,-1)), wxTE_RIGHT|wxTE_READONLY);
    #if wxVERSION_NUMBER >= 3000
    m_currentPositionZ->SetHint(wxT(""));
    #endif
    
    flexGridSizer7870->Add(m_currentPositionZ, 0, wxALL|wxEXPAND|wxALIGN_RIGHT, WXC_FROM_DIP(1));
    m_currentPositionZ->SetMinSize(wxSize(90,-1));
    
    m_staticText7874 = new wxStaticText(this, wxID_ANY, _("[mm]"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), 0);
    wxFont m_staticText7874Font(9, wxFONTFAMILY_SWISS, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_BOLD, false, wxT("Segoe UI"));
    m_staticText7874->SetFont(m_staticText7874Font);
    
    flexGridSizer7870->Add(m_staticText7874, 0, wxALL, WXC_FROM_DIP(5));
    
    m_staticText78464 = new wxStaticText(this, wxID_ANY, _("Reference Position [x, y, z]:"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), 0);
    
    flexGridSizer78421->Add(m_staticText78464, 0, wxALL, WXC_FROM_DIP(3));
    
    wxFlexGridSizer* flexGridSizer7875 = new wxFlexGridSizer(1, 4, 0, 0);
    flexGridSizer7875->SetFlexibleDirection( wxBOTH );
    flexGridSizer7875->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    
    flexGridSizer78421->Add(flexGridSizer7875, 0, wxALL|wxEXPAND|wxALIGN_RIGHT, WXC_FROM_DIP(5));
    
    m_referencePositionX = new wxTextCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDLG_UNIT(this, wxSize(90,-1)), wxTE_RIGHT|wxTE_READONLY);
    #if wxVERSION_NUMBER >= 3000
    m_referencePositionX->SetHint(wxT(""));
    #endif
    
    flexGridSizer7875->Add(m_referencePositionX, 0, wxALL|wxEXPAND|wxALIGN_RIGHT, WXC_FROM_DIP(1));
    m_referencePositionX->SetMinSize(wxSize(90,-1));
    
    m_referencePositionY = new wxTextCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDLG_UNIT(this, wxSize(90,-1)), wxTE_RIGHT|wxTE_READONLY);
    #if wxVERSION_NUMBER >= 3000
    m_referencePositionY->SetHint(wxT(""));
    #endif
    
    flexGridSizer7875->Add(m_referencePositionY, 0, wxALL|wxEXPAND|wxALIGN_RIGHT, WXC_FROM_DIP(1));
    m_referencePositionY->SetMinSize(wxSize(90,-1));
    
    m_referencePositionZ = new wxTextCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDLG_UNIT(this, wxSize(90,-1)), wxTE_RIGHT|wxTE_READONLY);
    #if wxVERSION_NUMBER >= 3000
    m_referencePositionZ->SetHint(wxT(""));
    #endif
    
    flexGridSizer7875->Add(m_referencePositionZ, 0, wxALL|wxEXPAND|wxALIGN_RIGHT, WXC_FROM_DIP(1));
    m_referencePositionZ->SetMinSize(wxSize(90,-1));
    
    m_staticText7879 = new wxStaticText(this, wxID_ANY, _("[mm]"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), 0);
    wxFont m_staticText7879Font(9, wxFONTFAMILY_SWISS, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_BOLD, false, wxT("Segoe UI"));
    m_staticText7879->SetFont(m_staticText7879Font);
    
    flexGridSizer7875->Add(m_staticText7879, 0, wxALL, WXC_FROM_DIP(5));
    
    m_staticText78486 = new wxStaticText(this, wxID_ANY, _("Distance [dx, dy, dz]:"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), 0);
    
    flexGridSizer78421->Add(m_staticText78486, 0, wxALL, WXC_FROM_DIP(3));
    
    wxFlexGridSizer* flexGridSizer7880 = new wxFlexGridSizer(1, 4, 0, 0);
    flexGridSizer7880->SetFlexibleDirection( wxBOTH );
    flexGridSizer7880->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    
    flexGridSizer78421->Add(flexGridSizer7880, 0, wxALL|wxEXPAND|wxALIGN_RIGHT, WXC_FROM_DIP(5));
    
    m_distanceX = new wxTextCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDLG_UNIT(this, wxSize(90,-1)), wxTE_RIGHT|wxTE_READONLY);
    #if wxVERSION_NUMBER >= 3000
    m_distanceX->SetHint(wxT(""));
    #endif
    
    flexGridSizer7880->Add(m_distanceX, 0, wxALL|wxEXPAND|wxALIGN_RIGHT, WXC_FROM_DIP(1));
    m_distanceX->SetMinSize(wxSize(90,-1));
    
    m_distanceY = new wxTextCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDLG_UNIT(this, wxSize(90,-1)), wxTE_RIGHT|wxTE_READONLY);
    #if wxVERSION_NUMBER >= 3000
    m_distanceY->SetHint(wxT(""));
    #endif
    
    flexGridSizer7880->Add(m_distanceY, 0, wxALL|wxEXPAND|wxALIGN_RIGHT, WXC_FROM_DIP(1));
    m_distanceY->SetMinSize(wxSize(90,-1));
    
    m_distanceZ = new wxTextCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDLG_UNIT(this, wxSize(90,-1)), wxTE_RIGHT|wxTE_READONLY);
    #if wxVERSION_NUMBER >= 3000
    m_distanceZ->SetHint(wxT(""));
    #endif
    
    flexGridSizer7880->Add(m_distanceZ, 0, wxALL|wxEXPAND|wxALIGN_RIGHT, WXC_FROM_DIP(1));
    m_distanceZ->SetMinSize(wxSize(90,-1));
    
    m_staticText7885 = new wxStaticText(this, wxID_ANY, _("[mm]"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), 0);
    wxFont m_staticText7885Font(9, wxFONTFAMILY_SWISS, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_BOLD, false, wxT("Segoe UI"));
    m_staticText7885->SetFont(m_staticText7885Font);
    
    flexGridSizer7880->Add(m_staticText7885, 0, wxALL, WXC_FROM_DIP(5));
    
    wxFlexGridSizer* flexGridSizer7855 = new wxFlexGridSizer(3, 1, 0, 0);
    flexGridSizer7855->SetFlexibleDirection( wxBOTH );
    flexGridSizer7855->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    flexGridSizer7855->AddGrowableCol(0);
    flexGridSizer7855->AddGrowableRow(2);
    
    flexGridSizer7813->Add(flexGridSizer7855, 0, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    m_staticText7857 = new wxStaticText(this, wxID_ANY, _("Axis Sequence:"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), 0);
    wxFont m_staticText7857Font(9, wxFONTFAMILY_SWISS, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_BOLD, false, wxT("Segoe UI"));
    m_staticText7857->SetFont(m_staticText7857Font);
    
    flexGridSizer7855->Add(m_staticText7857, 0, wxALL, WXC_FROM_DIP(0));
    
    flexGridSizer7855->Add(0, 5, 1, wxALL, WXC_FROM_DIP(0));
    
    wxArrayString m_sequenceListArr;
    m_sequenceListArr.Add(_("Mode 01:              dz  ->  dx  ->  dy"));
    m_sequenceListArr.Add(_("Mode 02:              dz  ->  dy  ->  dx"));
    m_sequenceListArr.Add(_("Mode 03:              dx  ->  dy  ->  dz"));
    m_sequenceListArr.Add(_("Mode 04:              dx  ->  dz  ->  dy"));
    m_sequenceListArr.Add(_("Mode 05:              dy  ->  dx  ->  dz"));
    m_sequenceListArr.Add(_("Mode 06:              dy  ->  dz  ->  dx"));
    m_sequenceList = new wxListBox(this, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), m_sequenceListArr, wxLB_ALWAYS_SB|wxLB_SINGLE);
    m_sequenceList->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_INACTIVECAPTION));
    wxFont m_sequenceListFont(17, wxFONTFAMILY_SWISS, wxFONTSTYLE_ITALIC, wxFONTWEIGHT_BOLD, false, wxT("Segoe UI"));
    m_sequenceList->SetFont(m_sequenceListFont);
    m_sequenceList->SetToolTip(_("Select the sequence to move to the\nreference position"));
    m_sequenceList->SetSelection(0);
    
    flexGridSizer7855->Add(m_sequenceList, 0, wxALL|wxEXPAND, WXC_FROM_DIP(0));
    
    m_staticLine7836 = new wxStaticLine(this, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), wxLI_HORIZONTAL);
    
    flexGridSizer7813->Add(m_staticLine7836, 0, wxALL|wxEXPAND, WXC_FROM_DIP(2));
    
    wxFlexGridSizer* flexGridSizer7822 = new wxFlexGridSizer(1, 2, 0, 0);
    flexGridSizer7822->SetFlexibleDirection( wxBOTH );
    flexGridSizer7822->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    
    flexGridSizer7813->Add(flexGridSizer7822, 1, wxALL|wxEXPAND|wxALIGN_RIGHT, WXC_FROM_DIP(5));
    
    m_button7828 = new wxButton(this, wxID_ANY, _("Move Distance"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), 0);
    m_button7828->SetDefault();
    #if wxVERSION_NUMBER >= 2904
    m_button7828->SetBitmap(wxXmlResource::Get()->LoadBitmap(wxT("dialog-ok")), wxLEFT);
    m_button7828->SetBitmapMargins(2,2);
    #endif
    wxFont m_button7828Font(9, wxFONTFAMILY_SWISS, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_BOLD, false, wxT("Segoe UI"));
    m_button7828->SetFont(m_button7828Font);
    
    flexGridSizer7822->Add(m_button7828, 0, wxALL, WXC_FROM_DIP(5));
    
    m_button7830 = new wxButton(this, wxID_ANY, _("Cancel"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), 0);
    #if wxVERSION_NUMBER >= 2904
    m_button7830->SetBitmap(wxXmlResource::Get()->LoadBitmap(wxT("dialog-close")), wxLEFT);
    m_button7830->SetBitmapMargins(2,2);
    #endif
    wxFont m_button7830Font(9, wxFONTFAMILY_SWISS, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_BOLD, false, wxT("Segoe UI"));
    m_button7830->SetFont(m_button7830Font);
    
    flexGridSizer7822->Add(m_button7830, 0, wxALL, WXC_FROM_DIP(5));
    
    SetName(wxT("CncStartPositionResolverBase"));
    SetSize(-1,-1);
    if (GetSizer()) {
         GetSizer()->Fit(this);
    }
    if(GetParent()) {
        CentreOnParent(wxBOTH);
    } else {
        CentreOnScreen(wxBOTH);
    }
    // Connect events
    m_button7828->Connect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(CncStartPositionResolverBase::onOk), NULL, this);
    m_button7830->Connect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(CncStartPositionResolverBase::onCancel), NULL, this);
    
}

CncStartPositionResolverBase::~CncStartPositionResolverBase()
{
    m_button7828->Disconnect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(CncStartPositionResolverBase::onOk), NULL, this);
    m_button7830->Disconnect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(CncStartPositionResolverBase::onCancel), NULL, this);
    
}

CncPredefinedPositionsBase::CncPredefinedPositionsBase(wxWindow* parent, wxWindowID id, const wxPoint& pos, const wxSize& size, long style)
    : wxPanel(parent, id, pos, size, style)
{
    if ( !bBitmapLoaded ) {
        // We need to initialise the default bitmap handler
        wxXmlResource::Get()->AddHandler(new wxBitmapXmlHandler);
        wxC127EInitBitmapResources();
        bBitmapLoaded = true;
    }
    
    SetName(wxT("CncPredefinedPositionsBase"));
    SetSize(500,300);
    if (GetSizer()) {
         GetSizer()->Fit(this);
    }
}

CncPredefinedPositionsBase::~CncPredefinedPositionsBase()
{
}
